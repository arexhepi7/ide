#!/usr/bin/env bash

# autocompletion list
if [ "${1}" = "shortlist" ]
then
  if [ -z "${2}" ]
  then
    echo "setup help"
  fi
  exit
fi

if [ -n "${DEVON_IDE_TRACE}" ]; then set -vx; fi
# shellcheck source=scripts/functions
source "$(dirname "${0}")"/../functions

# Call lazydocker with specified arguments.
function doRun() {
  doSetup silent
  cd "${LAZYDOCKER_HOME}" || exit 1
  if doIsWindows
  then
    powershell.exe -command 'start powershell {.\lazydocker.exe}'
  else
    ./lazydocker 
  fi
}

function doSetup() {
  if [ ! -d "${LAZYDOCKER_HOME}" ] || [ "${1}" != "silent" ]
  then
    local version="${LAZYDOCKER_VERSION}"
    # Get latest release
    if [ -z "${version}" ]
    then 
      version="0.18.1"
      doEcho "Getting latest release..."
      local latestversion
      latestversion=$(curl -Ls -o /dev/null -w '%{url_effective}' https://github.com/jesseduffield/lazydocker/releases/latest | sed 's/^.*\///' | sed 's/^v//')
      doVersionCompare "${latestversion}" "${version}"
      if [ "${?}" = 1 ]
      then
        version=${latestversion}
      fi
    fi
    doCheckDockerVersions
    doInstall "-" "${LAZYDOCKER_HOME}" "lazydocker" "${version}"
  fi
}

function doCheckDockerVersions() {
  local DOCKERENGVERSION
  DOCKERENGVERSION=$(docker version | grep "Version" | head -1 | sed -ne 's/.*\([0-9][0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p')
  local DOCKERAPIVERSION
  DOCKERAPIVERSION=$(docker version | grep "API version" | head -1 | sed -ne 's/.*\([0-9]\+\.[0-9]\+\).*/\1/p')
  doVersionCompare "1.3.0" "${DOCKERENGVERSION}"
  local res1=$?
  doVersionCompare "1.25" "${DOCKERAPIVERSION}"
  local res2=$?
  local ressum=$((res1 + res2))
  doWarning "Please be aware, that if you want to use docker-compose with lazydocker, then you'll need at least version 1.23.2 of docker-compose"
  if [ "${res1}" == "1" ] || [ "${res2}" == "1" ]
  then
    if [ "${res1}" == "1" ]
    then
      doWarning "\nIt seems as if your docker-engine version is too old for a proper usage of lazydocker.\nPlease upgrade it at least to version 1.3.0"
      read -r -p "Continue by pressing enter"
    fi
    if [ "${res2}" == "1" ]
    then
      doWarning "\nIt seems as if your docker-API version is too old for a proper usage of lazydocker.\nPlease upgrade it at least to version 1.25.0"
      read -r -p "Continue by pressing enter"
    fi
  elif [ "${ressum}" == "4" ] || [ "${ressum}" == "0" ] || [ "${ressum}" == "2" ]
  then
    doSuccess "\nDocker-Engine and Docker-API versions are sufficient"
  else
    doWarning "\nSomething went wrong, is your docker-daemon running or did you forget to start Rancher Desktop?"
    read -r -p "Continue by pressing enter"
  fi
}

LAZYDOCKER_HOME="${DEVON_IDE_HOME}/software/lazydocker"

# CLI
case ${1} in 
"help" | "-h")
  echo "Install lazydocker."
  echo
  echo "Arguments:"
  echo " setup                    install lazydocker on your machine."
  echo "                          call lazydocker by executing the command 'devon lazydocker'. Call lazydocker --help for details or use lazydocker directly as preferred."
  echo
;;
"setup" | "s" )
  doEcho "Installing lazydocker..."
  doSetup
;;
"version" | "v" )
  lazydversion=$(cat "${LAZYDOCKER_HOME}"/.devon.software.version)
  doInfo "Current version of lazydocker is ${lazydversion}"
;;
*)
  echo "running lazydocker-binary"
  doRun 
;;
esac
  
